// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        (unknown)
// source: api/pitchbackend/v1/game.proto

package pitchbackendv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Position int32

const (
	Position_POSITION_UNSPECIFIED       Position = 0
	Position_POSITION_PITCHER           Position = 1
	Position_POSITION_CATCHER           Position = 2
	Position_POSITION_FIRST_BASE        Position = 3
	Position_POSITION_SECOND_BASE       Position = 4
	Position_POSITION_THIRD_BASE        Position = 5
	Position_POSITION_SHORTSTOP         Position = 6
	Position_POSITION_LEFT_FIELD        Position = 7
	Position_POSITION_CENTER_FIELD      Position = 8
	Position_POSITION_RIGHT_FIELD       Position = 9
	Position_POSITION_DESIGNATED_HITTER Position = 10
)

// Enum value maps for Position.
var (
	Position_name = map[int32]string{
		0:  "POSITION_UNSPECIFIED",
		1:  "POSITION_PITCHER",
		2:  "POSITION_CATCHER",
		3:  "POSITION_FIRST_BASE",
		4:  "POSITION_SECOND_BASE",
		5:  "POSITION_THIRD_BASE",
		6:  "POSITION_SHORTSTOP",
		7:  "POSITION_LEFT_FIELD",
		8:  "POSITION_CENTER_FIELD",
		9:  "POSITION_RIGHT_FIELD",
		10: "POSITION_DESIGNATED_HITTER",
	}
	Position_value = map[string]int32{
		"POSITION_UNSPECIFIED":       0,
		"POSITION_PITCHER":           1,
		"POSITION_CATCHER":           2,
		"POSITION_FIRST_BASE":        3,
		"POSITION_SECOND_BASE":       4,
		"POSITION_THIRD_BASE":        5,
		"POSITION_SHORTSTOP":         6,
		"POSITION_LEFT_FIELD":        7,
		"POSITION_CENTER_FIELD":      8,
		"POSITION_RIGHT_FIELD":       9,
		"POSITION_DESIGNATED_HITTER": 10,
	}
)

func (x Position) Enum() *Position {
	p := new(Position)
	*p = x
	return p
}

func (x Position) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Position) Descriptor() protoreflect.EnumDescriptor {
	return file_api_pitchbackend_v1_game_proto_enumTypes[0].Descriptor()
}

func (Position) Type() protoreflect.EnumType {
	return &file_api_pitchbackend_v1_game_proto_enumTypes[0]
}

func (x Position) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Position.Descriptor instead.
func (Position) EnumDescriptor() ([]byte, []int) {
	return file_api_pitchbackend_v1_game_proto_rawDescGZIP(), []int{0}
}

type Player struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FavoritePosition []Position             `protobuf:"varint,3,rep,packed,name=favorite_position,json=favoritePosition,proto3,enum=api.pitchbackend.v1.Position" json:"favorite_position,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Player) Reset() {
	*x = Player{}
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_api_pitchbackend_v1_game_proto_rawDescGZIP(), []int{0}
}

func (x *Player) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Player) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Player) GetFavoritePosition() []Position {
	if x != nil {
		return x.FavoritePosition
	}
	return nil
}

type Team struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Players       []*Player              `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Team) Reset() {
	*x = Team{}
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_api_pitchbackend_v1_game_proto_rawDescGZIP(), []int{1}
}

func (x *Team) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Team) GetPlayers() []*Player {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *Team) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type StartingMember struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrderNumber   int32                  `protobuf:"varint,2,opt,name=order_number,json=orderNumber,proto3" json:"order_number,omitempty"`
	Player        *Player                `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	Position      Position               `protobuf:"varint,4,opt,name=position,proto3,enum=api.pitchbackend.v1.Position" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartingMember) Reset() {
	*x = StartingMember{}
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartingMember) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartingMember) ProtoMessage() {}

func (x *StartingMember) ProtoReflect() protoreflect.Message {
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartingMember.ProtoReflect.Descriptor instead.
func (*StartingMember) Descriptor() ([]byte, []int) {
	return file_api_pitchbackend_v1_game_proto_rawDescGZIP(), []int{2}
}

func (x *StartingMember) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *StartingMember) GetOrderNumber() int32 {
	if x != nil {
		return x.OrderNumber
	}
	return 0
}

func (x *StartingMember) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *StartingMember) GetPosition() Position {
	if x != nil {
		return x.Position
	}
	return Position_POSITION_UNSPECIFIED
}

type Lineup struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Team            *Team                  `protobuf:"bytes,2,opt,name=team,proto3" json:"team,omitempty"`
	StartingMembers []*StartingMember      `protobuf:"bytes,3,rep,name=starting_members,json=startingMembers,proto3" json:"starting_members,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Lineup) Reset() {
	*x = Lineup{}
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Lineup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lineup) ProtoMessage() {}

func (x *Lineup) ProtoReflect() protoreflect.Message {
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lineup.ProtoReflect.Descriptor instead.
func (*Lineup) Descriptor() ([]byte, []int) {
	return file_api_pitchbackend_v1_game_proto_rawDescGZIP(), []int{3}
}

func (x *Lineup) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Lineup) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

func (x *Lineup) GetStartingMembers() []*StartingMember {
	if x != nil {
		return x.StartingMembers
	}
	return nil
}

type Game struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Date          *Date                  `protobuf:"bytes,2,opt,name=date,proto3,oneof" json:"date,omitempty"`
	DhEnbabled    bool                   `protobuf:"varint,3,opt,name=dh_enbabled,json=dhEnbabled,proto3" json:"dh_enbabled,omitempty"`
	Title         string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	FirstTeam     *Lineup                `protobuf:"bytes,5,opt,name=first_team,json=firstTeam,proto3" json:"first_team,omitempty"`
	SecondTeam    *Lineup                `protobuf:"bytes,6,opt,name=second_team,json=secondTeam,proto3" json:"second_team,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Game) Reset() {
	*x = Game{}
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_api_pitchbackend_v1_game_proto_rawDescGZIP(), []int{4}
}

func (x *Game) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Game) GetDate() *Date {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *Game) GetDhEnbabled() bool {
	if x != nil {
		return x.DhEnbabled
	}
	return false
}

func (x *Game) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Game) GetFirstTeam() *Lineup {
	if x != nil {
		return x.FirstTeam
	}
	return nil
}

func (x *Game) GetSecondTeam() *Lineup {
	if x != nil {
		return x.SecondTeam
	}
	return nil
}

type CreateGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Game          *Game                  `protobuf:"bytes,1,opt,name=game,proto3" json:"game,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameRequest) Reset() {
	*x = CreateGameRequest{}
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameRequest) ProtoMessage() {}

func (x *CreateGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameRequest.ProtoReflect.Descriptor instead.
func (*CreateGameRequest) Descriptor() ([]byte, []int) {
	return file_api_pitchbackend_v1_game_proto_rawDescGZIP(), []int{5}
}

func (x *CreateGameRequest) GetGame() *Game {
	if x != nil {
		return x.Game
	}
	return nil
}

type CreateGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateGameResponse) Reset() {
	*x = CreateGameResponse{}
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateGameResponse) ProtoMessage() {}

func (x *CreateGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_pitchbackend_v1_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateGameResponse.ProtoReflect.Descriptor instead.
func (*CreateGameResponse) Descriptor() ([]byte, []int) {
	return file_api_pitchbackend_v1_game_proto_rawDescGZIP(), []int{6}
}

var File_api_pitchbackend_v1_game_proto protoreflect.FileDescriptor

var file_api_pitchbackend_v1_game_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x69, 0x74, 0x63, 0x68,
	0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x78, 0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x4a, 0x0a, 0x11, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x66,
	0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x61, 0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70,
	0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x97, 0x01, 0x0a, 0x06, 0x4c, 0x69, 0x6e,
	0x65, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65,
	0x61, 0x6d, 0x12, 0x4e, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x22, 0x84, 0x02, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1f, 0x0a, 0x0b, 0x64, 0x68, 0x5f, 0x65, 0x6e, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x64, 0x68, 0x45, 0x6e, 0x62, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x74, 0x65, 0x61, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x75, 0x70, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x54, 0x65,
	0x61, 0x6d, 0x12, 0x3c, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x61,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x69,
	0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x75, 0x70, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x54, 0x65, 0x61, 0x6d,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x22, 0x42, 0x0a, 0x11, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x67, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2a, 0xa2, 0x02, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x14, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x49, 0x54, 0x43, 0x48, 0x45, 0x52, 0x10, 0x01,
	0x12, 0x14, 0x0a, 0x10, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x54,
	0x43, 0x48, 0x45, 0x52, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x03, 0x12,
	0x18, 0x0a, 0x14, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x5f, 0x42, 0x41, 0x53, 0x45, 0x10, 0x04, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x48, 0x49, 0x52, 0x44, 0x5f, 0x42, 0x41, 0x53, 0x45,
	0x10, 0x05, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53,
	0x48, 0x4f, 0x52, 0x54, 0x53, 0x54, 0x4f, 0x50, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x50, 0x4f,
	0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x46, 0x49, 0x45, 0x4c,
	0x44, 0x10, 0x07, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x43, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x08, 0x12, 0x18,
	0x0a, 0x14, 0x50, 0x4f, 0x53, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54,
	0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x4f, 0x53, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x49, 0x47, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x5f,
	0x48, 0x49, 0x54, 0x54, 0x45, 0x52, 0x10, 0x0a, 0x32, 0x6c, 0x0a, 0x0b, 0x47, 0x61, 0x6d, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63,
	0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0xd4, 0x01, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e,
	0x76, 0x31, 0x42, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a,
	0x40, 0x70, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2f,
	0x76, 0x31, 0x3b, 0x70, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x76,
	0x31, 0xa2, 0x02, 0x03, 0x41, 0x50, 0x58, 0xaa, 0x02, 0x13, 0x41, 0x70, 0x69, 0x2e, 0x50, 0x69,
	0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x13,
	0x41, 0x70, 0x69, 0x5c, 0x50, 0x69, 0x74, 0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x5c, 0x56, 0x31, 0xe2, 0x02, 0x1f, 0x41, 0x70, 0x69, 0x5c, 0x50, 0x69, 0x74, 0x63, 0x68, 0x62,
	0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x15, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x50, 0x69, 0x74,
	0x63, 0x68, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_pitchbackend_v1_game_proto_rawDescOnce sync.Once
	file_api_pitchbackend_v1_game_proto_rawDescData = file_api_pitchbackend_v1_game_proto_rawDesc
)

func file_api_pitchbackend_v1_game_proto_rawDescGZIP() []byte {
	file_api_pitchbackend_v1_game_proto_rawDescOnce.Do(func() {
		file_api_pitchbackend_v1_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_pitchbackend_v1_game_proto_rawDescData)
	})
	return file_api_pitchbackend_v1_game_proto_rawDescData
}

var file_api_pitchbackend_v1_game_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_pitchbackend_v1_game_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_pitchbackend_v1_game_proto_goTypes = []any{
	(Position)(0),              // 0: api.pitchbackend.v1.Position
	(*Player)(nil),             // 1: api.pitchbackend.v1.Player
	(*Team)(nil),               // 2: api.pitchbackend.v1.Team
	(*StartingMember)(nil),     // 3: api.pitchbackend.v1.StartingMember
	(*Lineup)(nil),             // 4: api.pitchbackend.v1.Lineup
	(*Game)(nil),               // 5: api.pitchbackend.v1.Game
	(*CreateGameRequest)(nil),  // 6: api.pitchbackend.v1.CreateGameRequest
	(*CreateGameResponse)(nil), // 7: api.pitchbackend.v1.CreateGameResponse
	(*Date)(nil),               // 8: api.pitchbackend.v1.Date
}
var file_api_pitchbackend_v1_game_proto_depIdxs = []int32{
	0,  // 0: api.pitchbackend.v1.Player.favorite_position:type_name -> api.pitchbackend.v1.Position
	1,  // 1: api.pitchbackend.v1.Team.players:type_name -> api.pitchbackend.v1.Player
	1,  // 2: api.pitchbackend.v1.StartingMember.player:type_name -> api.pitchbackend.v1.Player
	0,  // 3: api.pitchbackend.v1.StartingMember.position:type_name -> api.pitchbackend.v1.Position
	2,  // 4: api.pitchbackend.v1.Lineup.team:type_name -> api.pitchbackend.v1.Team
	3,  // 5: api.pitchbackend.v1.Lineup.starting_members:type_name -> api.pitchbackend.v1.StartingMember
	8,  // 6: api.pitchbackend.v1.Game.date:type_name -> api.pitchbackend.v1.Date
	4,  // 7: api.pitchbackend.v1.Game.first_team:type_name -> api.pitchbackend.v1.Lineup
	4,  // 8: api.pitchbackend.v1.Game.second_team:type_name -> api.pitchbackend.v1.Lineup
	5,  // 9: api.pitchbackend.v1.CreateGameRequest.game:type_name -> api.pitchbackend.v1.Game
	6,  // 10: api.pitchbackend.v1.GameService.CreateGame:input_type -> api.pitchbackend.v1.CreateGameRequest
	7,  // 11: api.pitchbackend.v1.GameService.CreateGame:output_type -> api.pitchbackend.v1.CreateGameResponse
	11, // [11:12] is the sub-list for method output_type
	10, // [10:11] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_api_pitchbackend_v1_game_proto_init() }
func file_api_pitchbackend_v1_game_proto_init() {
	if File_api_pitchbackend_v1_game_proto != nil {
		return
	}
	file_api_pitchbackend_v1_date_proto_init()
	file_api_pitchbackend_v1_game_proto_msgTypes[4].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_pitchbackend_v1_game_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_pitchbackend_v1_game_proto_goTypes,
		DependencyIndexes: file_api_pitchbackend_v1_game_proto_depIdxs,
		EnumInfos:         file_api_pitchbackend_v1_game_proto_enumTypes,
		MessageInfos:      file_api_pitchbackend_v1_game_proto_msgTypes,
	}.Build()
	File_api_pitchbackend_v1_game_proto = out.File
	file_api_pitchbackend_v1_game_proto_rawDesc = nil
	file_api_pitchbackend_v1_game_proto_goTypes = nil
	file_api_pitchbackend_v1_game_proto_depIdxs = nil
}
